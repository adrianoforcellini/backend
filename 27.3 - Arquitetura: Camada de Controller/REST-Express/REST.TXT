REST é um termo definido para "Transferência de Estado Representacional"
(Representational State Transfer), criado no ano 2000 por Roy Fielding em sua tese de 
doutoramento na qual ele descreve um design de arquitetura de software construído para 
servir aplicações em rede. A aplicação mais comum de REST é a própria World Wide Web, 
que utilizou REST como base para o desenvolvimento do HTTP 1.1.

*** Príncipio CRUD ( Post, Get, Put, Delet) ***

REST afirma que a Web já desfrutou de escalabilidade como resultado de uma série de
 conceitos de projeto fundamentais:

Um protocolo cliente/servidor sem estado: cada mensagem HTTP contém toda a informação 
necessária para compreender o pedido. Como resultado, nem o cliente e nem o servidor necessitam
 gravar nenhum estado das comunicações entre mensagens. Na prática, muitas aplicações 
 baseadas em HTTP utilizam cookies e outros mecanismos para manter o estado da sessão 
 (algumas destas práticas, como a reescrita de URLs, não são permitidas pela regra do REST).

Um conjunto de operações bem definidas que se aplicam a todos os recursos de informação:
 HTTP em si define um pequeno conjunto de operações, as mais importantes são POST, GET, PUT e DELETE. 
 Com frequência estas operações são combinadas com operações CRUD para a persistência de dados,
  onde POST não se encaixa exatamente neste esquema.

Uma sintaxe universal para identificar os recursos. No sistema REST, cada recurso é unicamente 
direcionado através da sua URI.

O uso de hipermídia, tanto para a informação da aplicação como para as transições 
de estado da aplicação: a representação deste estado em um sistema REST são tipicamente 
HTML ou XML. Como resultado disto, é possível navegar com um recurso REST a muitos outros, 
simplesmente seguindo ligações sem requerer o uso de registros ou outra infraestrutura adicional.